import { FileDownload } from '@/types';
import { v4 } from '@/utility';

export default (): FileDownload => ({
  id: v4(),
  fileName: 'Математический анализ',
	ext: '.md',
  base64:
    'data:text/markdown;base64,',
});
